// This file is auto-generated by @hey-api/openapi-ts

export type LocationOut = {
    name: string;
    id: string;
    user: UserSchema;
};

export type UserSchema = {
    email: string;
    first_name: string;
    last_name: string;
};

export type LocationIn = {
    name: string;
};

export type LocationPatch = {
    name: string;
};

export type DeleteStatus = {
    success: boolean;
};

export type AreaOut = {
    name: string;
    id: string;
    location: LocationOut;
    user: UserSchema;
};

export type AreaIn = {
    name: string;
    location_id: string;
};

export type AreaPatch = {
    name: string;
    location_id: string;
};

export type TokenObtainPairOut = {
    access: string;
    refresh: string;
    user: UserSchema;
};

export type TokenObtainPair = {
    password: string;
    email: string;
};

export type TokenRefreshPairOut = {
    access: string;
    refresh: string;
};

export type TokenRefreshInputSchema = {
    refresh: string;
};

export type RegEnabledSchema = {
    enabled: boolean;
};

export type RegisterIn = {
    email: string;
    password: string;
    password_verify: string;
    first_name: string;
    last_name: string;
};

export type PlantOut = {
    id?: string;
    name: string;
    common_name?: string | null;
    scientific_name?: string | null;
    purchase_date?: string | null;
    graveyard?: boolean;
    death_date?: string | null;
    main_photo?: string | null;
    notes?: string | null;
    area: string;
    user: string;
};

export type PlantIn = {
    area_id: string;
    purchase_date?: string;
    graveyard?: boolean;
    death_date?: string;
    name: string;
    common_name?: string | null;
    scientific_name?: string | null;
    notes?: string | null;
};

export type PlantPost = {
    purchase_date?: string;
    graveyard?: boolean;
    death_date?: string;
    name?: string | null;
    common_name?: string | null;
    scientific_name?: string | null;
    notes?: string | null;
};

export type EntryOut = {
    id?: string;
    Timestamp: string;
    plant: string;
    notes?: string | null;
    plant_health: number;
    photo?: string | null;
    user: string;
    activities: Array<(string)>;
};

export type EntryIn = {
    activities: Array<(string)>;
    Timestamp: string;
    plant_id: string;
    notes?: string | null;
    plant_health?: number | null;
};

export type ActivityOut = {
    id?: string;
    name: string;
    description?: string | null;
};

export type BulkPlantCreateResponse = {
    created?: Array<PlantOut>;
    errors?: {
        [key: string]: (string);
    };
};

export type TrackerApiViewLocationListLocationsResponse = Array<LocationOut>;

export type TrackerApiViewLocationCreateLocationData = {
    requestBody: LocationIn;
};

export type TrackerApiViewLocationCreateLocationResponse = LocationOut;

export type TrackerApiViewLocationGetLocationData = {
    locationId: string;
};

export type TrackerApiViewLocationGetLocationResponse = LocationOut;

export type LocationPatchLocationData = {
    locationId: string;
    requestBody: LocationPatch;
};

export type LocationPatchLocationResponse = LocationOut;

export type TrackerApiViewLocationDeleteLocationData = {
    locationId: string;
};

export type TrackerApiViewLocationDeleteLocationResponse = DeleteStatus;

export type TrackerApiViewAreaListAreasResponse = Array<AreaOut>;

export type TrackerApiViewAreaCreateAreaData = {
    requestBody: AreaIn;
};

export type TrackerApiViewAreaCreateAreaResponse = AreaOut;

export type TrackerApiViewAreaGetAreaData = {
    areaId: string;
};

export type TrackerApiViewAreaGetAreaResponse = AreaOut;

export type AreaPatchAreaData = {
    areaId: string;
    requestBody: AreaPatch;
};

export type AreaPatchAreaResponse = AreaOut;

export type TrackerApiViewAreaDeleteAreaData = {
    areaId: string;
};

export type TrackerApiViewAreaDeleteAreaResponse = DeleteStatus;

export type TrackerApiViewUserNewTokenData = {
    requestBody: TokenObtainPair;
};

export type TrackerApiViewUserNewTokenResponse = TokenObtainPairOut;

export type TrackerApiViewUserRefreshTokenData = {
    requestBody: TokenRefreshInputSchema;
};

export type TrackerApiViewUserRefreshTokenResponse = TokenRefreshPairOut;

export type TrackerApiViewUserMeResponse = UserSchema;

export type TrackerApiViewUserUpdateMeData = {
    requestBody: UserSchema;
};

export type TrackerApiViewUserUpdateMeResponse = UserSchema;

export type TrackerApiViewUserRegEnabledResponse = RegEnabledSchema;

export type TrackerApiViewUserRegisterData = {
    requestBody: RegisterIn;
};

export type TrackerApiViewUserRegisterResponse = UserSchema;

export type TrackerApiViewPlantListPlantsData = {
    excludeGraveyard?: boolean;
    graveyardOnly?: boolean;
};

export type TrackerApiViewPlantListPlantsResponse = Array<PlantOut>;

export type TrackerApiViewPlantCreatePlantData = {
    formData: {
        area_id: string;
        purchase_date?: string;
        graveyard?: boolean;
        death_date?: string;
        name: string;
        common_name?: string | null;
        scientific_name?: string | null;
        notes?: string | null;
        file?: (Blob | File);
    };
};

export type TrackerApiViewPlantCreatePlantResponse = PlantOut;

export type TrackerApiViewPlantGetPlantData = {
    plantId: string;
};

export type TrackerApiViewPlantGetPlantResponse = PlantOut;

export type TrackerApiViewPlantPostPlantData = {
    formData: {
        purchase_date?: string;
        graveyard?: boolean;
        death_date?: string;
        name?: string | null;
        common_name?: string | null;
        scientific_name?: string | null;
        notes?: string | null;
        file?: (Blob | File);
    };
    plantId: string;
};

export type TrackerApiViewPlantPostPlantResponse = PlantOut;

export type TrackerApiViewPlantDeletePlantData = {
    plantId: string;
};

export type TrackerApiViewPlantDeletePlantResponse = DeleteStatus;

export type TrackerApiViewEntryListEntriesResponse = Array<EntryOut>;

export type TrackerApiViewEntryCreateEntryData = {
    formData: {
        activities: Array<(string)>;
        Timestamp: string;
        plant_id: string;
        notes?: string | null;
        plant_health?: number | null;
        file?: (Blob | File);
    };
};

export type TrackerApiViewEntryCreateEntryResponse = EntryOut;

export type TrackerApiViewEntryGetPlantEntriesData = {
    plantId: string;
};

export type TrackerApiViewEntryGetPlantEntriesResponse = Array<EntryOut>;

export type TrackerApiViewEntryGetEntryData = {
    entryId: string;
};

export type TrackerApiViewEntryGetEntryResponse = EntryOut;

export type TrackerApiViewEntryDeleteEntryData = {
    entryId: string;
};

export type TrackerApiViewEntryDeleteEntryResponse = DeleteStatus;

export type TrackerApiViewActivityListActivitiesResponse = Array<ActivityOut>;

export type TrackerApiViewBulkBulkCreatePlantData = {
    formData: {
        file: (Blob | File);
    };
};

export type TrackerApiViewBulkBulkCreatePlantResponse = BulkPlantCreateResponse;

export type $OpenApiTs = {
    '/api/location/location': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<LocationOut>;
            };
        };
        post: {
            req: TrackerApiViewLocationCreateLocationData;
            res: {
                /**
                 * OK
                 */
                200: LocationOut;
            };
        };
    };
    '/api/location/{location_id}': {
        get: {
            req: TrackerApiViewLocationGetLocationData;
            res: {
                /**
                 * OK
                 */
                200: LocationOut;
            };
        };
        patch: {
            req: LocationPatchLocationData;
            res: {
                /**
                 * OK
                 */
                200: LocationOut;
            };
        };
        delete: {
            req: TrackerApiViewLocationDeleteLocationData;
            res: {
                /**
                 * OK
                 */
                200: DeleteStatus;
            };
        };
    };
    '/api/area/area': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<AreaOut>;
            };
        };
        post: {
            req: TrackerApiViewAreaCreateAreaData;
            res: {
                /**
                 * OK
                 */
                200: AreaOut;
            };
        };
    };
    '/api/area/{area_id}': {
        get: {
            req: TrackerApiViewAreaGetAreaData;
            res: {
                /**
                 * OK
                 */
                200: AreaOut;
            };
        };
        patch: {
            req: AreaPatchAreaData;
            res: {
                /**
                 * OK
                 */
                200: AreaOut;
            };
        };
        delete: {
            req: TrackerApiViewAreaDeleteAreaData;
            res: {
                /**
                 * OK
                 */
                200: DeleteStatus;
            };
        };
    };
    '/api/user/login': {
        post: {
            req: TrackerApiViewUserNewTokenData;
            res: {
                /**
                 * OK
                 */
                200: TokenObtainPairOut;
            };
        };
    };
    '/api/user/refresh': {
        post: {
            req: TrackerApiViewUserRefreshTokenData;
            res: {
                /**
                 * OK
                 */
                200: TokenRefreshPairOut;
            };
        };
    };
    '/api/user/me': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: UserSchema;
            };
        };
        patch: {
            req: TrackerApiViewUserUpdateMeData;
            res: {
                /**
                 * OK
                 */
                200: UserSchema;
            };
        };
    };
    '/api/user/reg_enabled': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: RegEnabledSchema;
            };
        };
    };
    '/api/user/register': {
        post: {
            req: TrackerApiViewUserRegisterData;
            res: {
                /**
                 * OK
                 */
                200: UserSchema;
            };
        };
    };
    '/api/plant/plant': {
        get: {
            req: TrackerApiViewPlantListPlantsData;
            res: {
                /**
                 * OK
                 */
                200: Array<PlantOut>;
            };
        };
        post: {
            req: TrackerApiViewPlantCreatePlantData;
            res: {
                /**
                 * OK
                 */
                200: PlantOut;
            };
        };
    };
    '/api/plant/{plant_id}': {
        get: {
            req: TrackerApiViewPlantGetPlantData;
            res: {
                /**
                 * OK
                 */
                200: PlantOut;
            };
        };
        post: {
            req: TrackerApiViewPlantPostPlantData;
            res: {
                /**
                 * OK
                 */
                200: PlantOut;
            };
        };
        delete: {
            req: TrackerApiViewPlantDeletePlantData;
            res: {
                /**
                 * OK
                 */
                200: DeleteStatus;
            };
        };
    };
    '/api/entry/entry': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<EntryOut>;
            };
        };
        post: {
            req: TrackerApiViewEntryCreateEntryData;
            res: {
                /**
                 * OK
                 */
                200: EntryOut;
            };
        };
    };
    '/api/entry/plant/{plant_id}': {
        get: {
            req: TrackerApiViewEntryGetPlantEntriesData;
            res: {
                /**
                 * OK
                 */
                200: Array<EntryOut>;
            };
        };
    };
    '/api/entry/{entry_id}': {
        get: {
            req: TrackerApiViewEntryGetEntryData;
            res: {
                /**
                 * OK
                 */
                200: EntryOut;
            };
        };
        delete: {
            req: TrackerApiViewEntryDeleteEntryData;
            res: {
                /**
                 * OK
                 */
                200: DeleteStatus;
            };
        };
    };
    '/api/activity/activity': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<ActivityOut>;
            };
        };
    };
    '/api/bulk/plant': {
        post: {
            req: TrackerApiViewBulkBulkCreatePlantData;
            res: {
                /**
                 * OK
                 */
                200: BulkPlantCreateResponse;
            };
        };
    };
};