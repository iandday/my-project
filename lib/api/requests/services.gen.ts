// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { TrackerApiViewLocationListLocationsResponse, TrackerApiViewLocationCreateLocationData, TrackerApiViewLocationCreateLocationResponse, TrackerApiViewLocationGetLocationData, TrackerApiViewLocationGetLocationResponse, LocationPatchLocationData, LocationPatchLocationResponse, TrackerApiViewLocationDeleteLocationData, TrackerApiViewLocationDeleteLocationResponse, TrackerApiViewAreaListAreasResponse, TrackerApiViewAreaCreateAreaData, TrackerApiViewAreaCreateAreaResponse, TrackerApiViewAreaGetAreaData, TrackerApiViewAreaGetAreaResponse, AreaPatchAreaData, AreaPatchAreaResponse, TrackerApiViewAreaDeleteAreaData, TrackerApiViewAreaDeleteAreaResponse, TrackerApiViewUserNewTokenData, TrackerApiViewUserNewTokenResponse, TrackerApiViewUserRefreshTokenData, TrackerApiViewUserRefreshTokenResponse, TrackerApiViewUserMeResponse, TrackerApiViewUserUpdateMeData, TrackerApiViewUserUpdateMeResponse, TrackerApiViewUserRegEnabledResponse, TrackerApiViewUserRegisterData, TrackerApiViewUserRegisterResponse, TrackerApiViewPlantListPlantsData, TrackerApiViewPlantListPlantsResponse, TrackerApiViewPlantCreatePlantData, TrackerApiViewPlantCreatePlantResponse, TrackerApiViewPlantGetPlantData, TrackerApiViewPlantGetPlantResponse, TrackerApiViewPlantPostPlantData, TrackerApiViewPlantPostPlantResponse, TrackerApiViewPlantDeletePlantData, TrackerApiViewPlantDeletePlantResponse, TrackerApiViewEntryListEntriesResponse, TrackerApiViewEntryCreateEntryData, TrackerApiViewEntryCreateEntryResponse, TrackerApiViewEntryGetPlantEntriesData, TrackerApiViewEntryGetPlantEntriesResponse, TrackerApiViewEntryGetEntryData, TrackerApiViewEntryGetEntryResponse, TrackerApiViewEntryDeleteEntryData, TrackerApiViewEntryDeleteEntryResponse, TrackerApiViewActivityListActivitiesResponse, TrackerApiViewBulkBulkCreatePlantData, TrackerApiViewBulkBulkCreatePlantResponse } from './types.gen';

export class LocationService {
    /**
     * List Locations
     * Location
     * @returns LocationOut OK
     * @throws ApiError
     */
    public static trackerApiViewLocationListLocations(): CancelablePromise<TrackerApiViewLocationListLocationsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/location/location'
        });
    }
    
    /**
     * Create Location
     * Location
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LocationOut OK
     * @throws ApiError
     */
    public static trackerApiViewLocationCreateLocation(data: TrackerApiViewLocationCreateLocationData): CancelablePromise<TrackerApiViewLocationCreateLocationResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/location/location',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Get Location
     * Location
     * @param data The data for the request.
     * @param data.locationId
     * @returns LocationOut OK
     * @throws ApiError
     */
    public static trackerApiViewLocationGetLocation(data: TrackerApiViewLocationGetLocationData): CancelablePromise<TrackerApiViewLocationGetLocationResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/location/{location_id}',
            path: {
                location_id: data.locationId
            }
        });
    }
    
    /**
     * Patch Location
     * Location
     * @param data The data for the request.
     * @param data.locationId
     * @param data.requestBody
     * @returns LocationOut OK
     * @throws ApiError
     */
    public static locationPatchLocation(data: LocationPatchLocationData): CancelablePromise<LocationPatchLocationResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/api/location/{location_id}',
            path: {
                location_id: data.locationId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete Location
     * Location
     * @param data The data for the request.
     * @param data.locationId
     * @returns DeleteStatus OK
     * @throws ApiError
     */
    public static trackerApiViewLocationDeleteLocation(data: TrackerApiViewLocationDeleteLocationData): CancelablePromise<TrackerApiViewLocationDeleteLocationResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/location/{location_id}',
            path: {
                location_id: data.locationId
            }
        });
    }
    
}

export class AreaService {
    /**
     * List Areas
     * Arean
     * @returns AreaOut OK
     * @throws ApiError
     */
    public static trackerApiViewAreaListAreas(): CancelablePromise<TrackerApiViewAreaListAreasResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/area/area'
        });
    }
    
    /**
     * Create Area
     * Area
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AreaOut OK
     * @throws ApiError
     */
    public static trackerApiViewAreaCreateArea(data: TrackerApiViewAreaCreateAreaData): CancelablePromise<TrackerApiViewAreaCreateAreaResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/area/area',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Get Area
     * Area
     * @param data The data for the request.
     * @param data.areaId
     * @returns AreaOut OK
     * @throws ApiError
     */
    public static trackerApiViewAreaGetArea(data: TrackerApiViewAreaGetAreaData): CancelablePromise<TrackerApiViewAreaGetAreaResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/area/{area_id}',
            path: {
                area_id: data.areaId
            }
        });
    }
    
    /**
     * Patch Area
     * Area
     * @param data The data for the request.
     * @param data.areaId
     * @param data.requestBody
     * @returns AreaOut OK
     * @throws ApiError
     */
    public static areaPatchArea(data: AreaPatchAreaData): CancelablePromise<AreaPatchAreaResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/api/area/{area_id}',
            path: {
                area_id: data.areaId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete Area
     * Area
     * @param data The data for the request.
     * @param data.areaId
     * @returns DeleteStatus OK
     * @throws ApiError
     */
    public static trackerApiViewAreaDeleteArea(data: TrackerApiViewAreaDeleteAreaData): CancelablePromise<TrackerApiViewAreaDeleteAreaResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/area/{area_id}',
            path: {
                area_id: data.areaId
            }
        });
    }
    
}

export class UserService {
    /**
     * New Token
     * @param data The data for the request.
     * @param data.requestBody
     * @returns TokenObtainPairOut OK
     * @throws ApiError
     */
    public static trackerApiViewUserNewToken(data: TrackerApiViewUserNewTokenData): CancelablePromise<TrackerApiViewUserNewTokenResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/user/login',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Refresh Token
     * @param data The data for the request.
     * @param data.requestBody
     * @returns TokenRefreshPairOut OK
     * @throws ApiError
     */
    public static trackerApiViewUserRefreshToken(data: TrackerApiViewUserRefreshTokenData): CancelablePromise<TrackerApiViewUserRefreshTokenResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/user/refresh',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Me
     * @returns UserSchema OK
     * @throws ApiError
     */
    public static trackerApiViewUserMe(): CancelablePromise<TrackerApiViewUserMeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/user/me'
        });
    }
    
    /**
     * Update Me
     * @param data The data for the request.
     * @param data.requestBody
     * @returns UserSchema OK
     * @throws ApiError
     */
    public static trackerApiViewUserUpdateMe(data: TrackerApiViewUserUpdateMeData): CancelablePromise<TrackerApiViewUserUpdateMeResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/api/user/me',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Reg Enabled
     * @returns RegEnabledSchema OK
     * @throws ApiError
     */
    public static trackerApiViewUserRegEnabled(): CancelablePromise<TrackerApiViewUserRegEnabledResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/user/reg_enabled'
        });
    }
    
    /**
     * Register
     * @param data The data for the request.
     * @param data.requestBody
     * @returns UserSchema OK
     * @throws ApiError
     */
    public static trackerApiViewUserRegister(data: TrackerApiViewUserRegisterData): CancelablePromise<TrackerApiViewUserRegisterResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/user/register',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class PlantService {
    /**
     * List Plants
     * Plant
     * @param data The data for the request.
     * @param data.excludeGraveyard
     * @param data.graveyardOnly
     * @returns PlantOut OK
     * @throws ApiError
     */
    public static trackerApiViewPlantListPlants(data: TrackerApiViewPlantListPlantsData = {}): CancelablePromise<TrackerApiViewPlantListPlantsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/plant/plant',
            query: {
                exclude_graveyard: data.excludeGraveyard,
                graveyard_only: data.graveyardOnly
            }
        });
    }
    
    /**
     * Create Plant
     * Plant
     * @param data The data for the request.
     * @param data.formData
     * @returns PlantOut OK
     * @throws ApiError
     */
    public static trackerApiViewPlantCreatePlant(data: TrackerApiViewPlantCreatePlantData): CancelablePromise<TrackerApiViewPlantCreatePlantResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/plant/plant',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Get Plant
     * Plant
     * @param data The data for the request.
     * @param data.plantId
     * @returns PlantOut OK
     * @throws ApiError
     */
    public static trackerApiViewPlantGetPlant(data: TrackerApiViewPlantGetPlantData): CancelablePromise<TrackerApiViewPlantGetPlantResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/plant/{plant_id}',
            path: {
                plant_id: data.plantId
            }
        });
    }
    
    /**
     * Post Plant
     * Plant
     * @param data The data for the request.
     * @param data.plantId
     * @param data.formData
     * @returns PlantOut OK
     * @throws ApiError
     */
    public static trackerApiViewPlantPostPlant(data: TrackerApiViewPlantPostPlantData): CancelablePromise<TrackerApiViewPlantPostPlantResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/plant/{plant_id}',
            path: {
                plant_id: data.plantId
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete Plant
     * Plant
     * @param data The data for the request.
     * @param data.plantId
     * @returns DeleteStatus OK
     * @throws ApiError
     */
    public static trackerApiViewPlantDeletePlant(data: TrackerApiViewPlantDeletePlantData): CancelablePromise<TrackerApiViewPlantDeletePlantResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/plant/{plant_id}',
            path: {
                plant_id: data.plantId
            }
        });
    }
    
}

export class EntryService {
    /**
     * List Entries
     * Entry
     * @returns EntryOut OK
     * @throws ApiError
     */
    public static trackerApiViewEntryListEntries(): CancelablePromise<TrackerApiViewEntryListEntriesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/entry/entry'
        });
    }
    
    /**
     * Create Entry
     * Entry
     * @param data The data for the request.
     * @param data.formData
     * @returns EntryOut OK
     * @throws ApiError
     */
    public static trackerApiViewEntryCreateEntry(data: TrackerApiViewEntryCreateEntryData): CancelablePromise<TrackerApiViewEntryCreateEntryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/entry/entry',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Get Plant Entries
     * Entry
     * @param data The data for the request.
     * @param data.plantId
     * @returns EntryOut OK
     * @throws ApiError
     */
    public static trackerApiViewEntryGetPlantEntries(data: TrackerApiViewEntryGetPlantEntriesData): CancelablePromise<TrackerApiViewEntryGetPlantEntriesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/entry/plant/{plant_id}',
            path: {
                plant_id: data.plantId
            }
        });
    }
    
    /**
     * Get Entry
     * Entry
     * @param data The data for the request.
     * @param data.entryId
     * @returns EntryOut OK
     * @throws ApiError
     */
    public static trackerApiViewEntryGetEntry(data: TrackerApiViewEntryGetEntryData): CancelablePromise<TrackerApiViewEntryGetEntryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/entry/{entry_id}',
            path: {
                entry_id: data.entryId
            }
        });
    }
    
    /**
     * Delete Entry
     * Entry
     * @param data The data for the request.
     * @param data.entryId
     * @returns DeleteStatus OK
     * @throws ApiError
     */
    public static trackerApiViewEntryDeleteEntry(data: TrackerApiViewEntryDeleteEntryData): CancelablePromise<TrackerApiViewEntryDeleteEntryResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/entry/{entry_id}',
            path: {
                entry_id: data.entryId
            }
        });
    }
    
}

export class ActivityService {
    /**
     * List Activities
     * Activity
     * @returns ActivityOut OK
     * @throws ApiError
     */
    public static trackerApiViewActivityListActivities(): CancelablePromise<TrackerApiViewActivityListActivitiesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/activity/activity'
        });
    }
    
}

export class BulkService {
    /**
     * Bulk Create Plant
     * Bulk
     * @param data The data for the request.
     * @param data.formData
     * @returns BulkPlantCreateResponse OK
     * @throws ApiError
     */
    public static trackerApiViewBulkBulkCreatePlant(data: TrackerApiViewBulkBulkCreatePlantData): CancelablePromise<TrackerApiViewBulkBulkCreatePlantResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/bulk/plant',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
}