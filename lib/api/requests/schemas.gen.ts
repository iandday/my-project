// This file is auto-generated by @hey-api/openapi-ts

export const $LocationOut = {
    properties: {
        name: {
            title: 'Name',
            type: 'string'
        },
        id: {
            format: 'uuid4',
            title: 'Id',
            type: 'string'
        },
        user: {
            '$ref': '#/components/schemas/UserSchema'
        }
    },
    required: ['name', 'id', 'user'],
    title: 'LocationOut',
    type: 'object'
} as const;

export const $UserSchema = {
    properties: {
        email: {
            maxLength: 254,
            title: 'Email',
            type: 'string'
        },
        first_name: {
            maxLength: 255,
            title: 'First Name',
            type: 'string'
        },
        last_name: {
            maxLength: 255,
            title: 'Last Name',
            type: 'string'
        }
    },
    required: ['email', 'first_name', 'last_name'],
    title: 'UserSchema',
    type: 'object'
} as const;

export const $LocationIn = {
    properties: {
        name: {
            title: 'Name',
            type: 'string'
        }
    },
    required: ['name'],
    title: 'LocationIn',
    type: 'object'
} as const;

export const $LocationPatch = {
    properties: {
        name: {
            title: 'Name',
            type: 'string'
        }
    },
    required: ['name'],
    title: 'LocationPatch',
    type: 'object'
} as const;

export const $DeleteStatus = {
    properties: {
        success: {
            title: 'Success',
            type: 'boolean'
        }
    },
    required: ['success'],
    title: 'DeleteStatus',
    type: 'object'
} as const;

export const $AreaOut = {
    properties: {
        name: {
            title: 'Name',
            type: 'string'
        },
        id: {
            format: 'uuid4',
            title: 'Id',
            type: 'string'
        },
        location: {
            '$ref': '#/components/schemas/LocationOut'
        },
        user: {
            '$ref': '#/components/schemas/UserSchema'
        }
    },
    required: ['name', 'id', 'location', 'user'],
    title: 'AreaOut',
    type: 'object'
} as const;

export const $AreaIn = {
    properties: {
        name: {
            title: 'Name',
            type: 'string'
        },
        location_id: {
            format: 'uuid4',
            title: 'Location Id',
            type: 'string'
        }
    },
    required: ['name', 'location_id'],
    title: 'AreaIn',
    type: 'object'
} as const;

export const $AreaPatch = {
    properties: {
        name: {
            title: 'Name',
            type: 'string'
        },
        location_id: {
            format: 'uuid4',
            title: 'Location Id',
            type: 'string'
        }
    },
    required: ['name', 'location_id'],
    title: 'AreaPatch',
    type: 'object'
} as const;

export const $TokenObtainPairOut = {
    properties: {
        access: {
            title: 'Access',
            type: 'string'
        },
        refresh: {
            title: 'Refresh',
            type: 'string'
        },
        user: {
            '$ref': '#/components/schemas/UserSchema'
        }
    },
    required: ['access', 'refresh', 'user'],
    title: 'TokenObtainPairOut',
    type: 'object'
} as const;

export const $TokenObtainPair = {
    properties: {
        password: {
            maxLength: 128,
            title: 'Password',
            type: 'string'
        },
        email: {
            maxLength: 254,
            title: 'Email',
            type: 'string'
        }
    },
    required: ['password', 'email'],
    title: 'TokenObtainPair',
    type: 'object'
} as const;

export const $TokenRefreshPairOut = {
    properties: {
        access: {
            title: 'Access',
            type: 'string'
        },
        refresh: {
            title: 'Refresh',
            type: 'string'
        }
    },
    required: ['access', 'refresh'],
    title: 'TokenRefreshPairOut',
    type: 'object'
} as const;

export const $TokenRefreshInputSchema = {
    properties: {
        refresh: {
            title: 'Refresh',
            type: 'string'
        }
    },
    required: ['refresh'],
    title: 'TokenRefreshInputSchema',
    type: 'object'
} as const;

export const $RegEnabledSchema = {
    properties: {
        enabled: {
            title: 'Enabled',
            type: 'boolean'
        }
    },
    required: ['enabled'],
    title: 'RegEnabledSchema',
    type: 'object'
} as const;

export const $RegisterIn = {
    properties: {
        email: {
            title: 'Email',
            type: 'string'
        },
        password: {
            title: 'Password',
            type: 'string'
        },
        password_verify: {
            title: 'Password Verify',
            type: 'string'
        },
        first_name: {
            title: 'First Name',
            type: 'string'
        },
        last_name: {
            title: 'Last Name',
            type: 'string'
        }
    },
    required: ['email', 'password', 'password_verify', 'first_name', 'last_name'],
    title: 'RegisterIn',
    type: 'object'
} as const;

export const $PlantOut = {
    properties: {
        id: {
            format: 'uuid',
            title: 'Id',
            type: 'string'
        },
        name: {
            title: 'Name',
            type: 'string'
        },
        common_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Common Name'
        },
        scientific_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Scientific Name'
        },
        purchase_date: {
            anyOf: [
                {
                    format: 'date',
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Purchase Date'
        },
        graveyard: {
            default: false,
            title: 'Graveyard',
            type: 'boolean'
        },
        death_date: {
            anyOf: [
                {
                    format: 'date',
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Death Date'
        },
        main_photo: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Main Photo'
        },
        notes: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Notes'
        },
        area: {
            format: 'uuid',
            title: 'Area',
            type: 'string'
        },
        user: {
            format: 'uuid',
            title: 'User',
            type: 'string'
        }
    },
    required: ['name', 'area', 'user'],
    title: 'PlantOut',
    type: 'object'
} as const;

export const $PlantIn = {
    properties: {
        area_id: {
            format: 'uuid4',
            title: 'Area Id',
            type: 'string'
        },
        purchase_date: {
            format: 'date',
            title: 'Purchase Date',
            type: 'string'
        },
        graveyard: {
            default: false,
            title: 'Graveyard',
            type: 'boolean'
        },
        death_date: {
            format: 'date',
            title: 'Death Date',
            type: 'string'
        },
        name: {
            title: 'Name',
            type: 'string'
        },
        common_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Common Name'
        },
        scientific_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Scientific Name'
        },
        notes: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Notes'
        }
    },
    required: ['area_id', 'name'],
    title: 'PlantIn',
    type: 'object'
} as const;

export const $PlantPost = {
    properties: {
        purchase_date: {
            format: 'date',
            title: 'Purchase Date',
            type: 'string'
        },
        graveyard: {
            default: false,
            title: 'Graveyard',
            type: 'boolean'
        },
        death_date: {
            format: 'date',
            title: 'Death Date',
            type: 'string'
        },
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        common_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Common Name'
        },
        scientific_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Scientific Name'
        },
        notes: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Notes'
        }
    },
    title: 'PlantPost',
    type: 'object'
} as const;

export const $EntryOut = {
    properties: {
        id: {
            format: 'uuid',
            title: 'Id',
            type: 'string'
        },
        Timestamp: {
            format: 'date-time',
            title: 'Timestamp',
            type: 'string'
        },
        plant: {
            format: 'uuid',
            title: 'Plant',
            type: 'string'
        },
        notes: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Notes'
        },
        plant_health: {
            title: 'Plant Health',
            type: 'integer'
        },
        photo: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Photo'
        },
        user: {
            format: 'uuid',
            title: 'User',
            type: 'string'
        },
        activities: {
            items: {
                type: 'string'
            },
            title: 'Activities',
            type: 'array'
        }
    },
    required: ['Timestamp', 'plant', 'plant_health', 'user', 'activities'],
    title: 'EntryOut',
    type: 'object'
} as const;

export const $EntryIn = {
    properties: {
        activities: {
            items: {
                type: 'string'
            },
            title: 'Activities',
            type: 'array'
        },
        Timestamp: {
            format: 'date-time',
            title: 'Timestamp',
            type: 'string'
        },
        plant_id: {
            format: 'uuid',
            title: 'Plant',
            type: 'string'
        },
        notes: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Notes'
        },
        plant_health: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Plant Health'
        }
    },
    required: ['activities', 'Timestamp', 'plant_id'],
    title: 'EntryIn',
    type: 'object'
} as const;

export const $ActivityOut = {
    properties: {
        id: {
            format: 'uuid',
            title: 'Id',
            type: 'string'
        },
        name: {
            title: 'Name',
            type: 'string'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        }
    },
    required: ['name'],
    title: 'ActivityOut',
    type: 'object'
} as const;

export const $BulkPlantCreateResponse = {
    properties: {
        created: {
            items: {
                '$ref': '#/components/schemas/PlantOut'
            },
            title: 'Created',
            type: 'array'
        },
        errors: {
            additionalProperties: {
                type: 'string'
            },
            title: 'Errors',
            type: 'object'
        }
    },
    title: 'BulkPlantCreateResponse',
    type: 'object'
} as const;